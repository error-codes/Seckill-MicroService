<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.young.seckill.stock.infrastructure.mapper.SeckillStockBucketMapper">

    <resultMap id="baseResultMap" type="com.young.seckill.stock.domain.entity.SeckillStockBucket">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="goods_id" property="goodsId" jdbcType="INTEGER"/>
        <result column="initial_stock" property="initialStock" jdbcType="INTEGER"/>
        <result column="available_stock" property="availableStock" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="DECIMAL"/>
        <result column="serial_no" property="serialNo" jdbcType="INTEGER"/>
    </resultMap>

    <update id="increaseStock">
        update seckill_stock_bucket
        set available = available_stock + #{quantity}
        where goods_id = #{goodsId}
        and serial_no = #{serialNo}
        and (available_stock = available_stock + #{quantity}) <![CDATA[<=]]> initial_stock
        and status = 1
    </update>

    <update id="decreaseStock">
        update seckill_stock_bucket
        set available_stock = available_stock - #{quantity}
        where goods_id = #{goodsId}
        and serial_no = #{serialNo}
        and available_stock <![CDATA[>=]]> #{quantity}
        and status = 1
    </update>

    <select id="getBucketsByGoodsId" resultMap="baseResultMap">
        select * from seckill_stock_bucket
        where goods_id = #{goodsId}
    </select>

    <update id="updateStatusByGoodsId">
        update seckill_stock_bucket set status = #{status} where goods_id = #{goodsId}
    </update>

    <delete id="deleteByGoodsId">
        delete from seckill_stock_bucket where goods_id = #{goodsId}
    </delete>

    <insert id="insertBatch">
        insert into seckill_stock_bucket values
        <foreach collection="buckets" item="bucket" separator=",">
            (
            #{bucket.id},
            #{bucket.goodsId},
            #{bucket.initialStock},
            #{bucket.availableStock},
            #{bucket.status},
            #{bucket.serialNo}
            )
        </foreach>
    </insert>

</mapper>